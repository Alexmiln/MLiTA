/*  Милютин Александр, ПС-24, задача 19.21, среда разработки Visual Studio 2022
 *
 *  19.15. Гостиница (4)
 *
 *  В гостиницу прибыли N супружеских пар (1 ≤ N ≤ 1000). Свободными оказались только одноместные номера, поэтому всех расселили в 2N номеров по одному человеку в номер.
 *  Тем не менее, каждому супругу сказали, где размещена его "вторая половина". В гостинице принято переселять жильцов, чтобы каждый мог наблюдать из окна новые виды.
 *  Для этого составлен определенный   план.   Он   представляет   собой   список из K пар номеров (1 ≤ K ≤ 1000). Постояльцы из каждой пары меняются номерами друг
 *  с другом в порядке следования пар в списке. Помогите супругам не потерять друг друга в этой неразберихе.
 *
 *  Ввод из файла INPUT.TXT. В первой строке заданы через пробел значения N и K. Во второй строке задан список из 2N номеров гостиницы в виде натуральных чисел
 *  через пробел в порядке возрастания. В третьей строке этот же список задан в другом порядке. Если на i-м месте в первом списке указан номер Ai, а во втором Bi,
 *  то в номерах Ai и Bi находятся супруги. Таким образом, вторая и третья строка описывают начальное расположение жильцов. В следующих K строках заданы пары из
 *  плана переселений в виде двух номеров гостиницы через пробел. Корректность информации гарантируется.
 *
 *  Вывод в файл OUTPUT.TXT. В единственной строке требуется вывести измененную третью строку ввода: список из 2N номеров гостиницы, определяющий комнаты проживания
 *  супругов после всех переселений. Снова если на i-м месте в списке из второй строки ввода и в списке из строки вывода имеются номера Ai и Ci, то в этих номерах
 *  гостиницы должны оказаться супруги.
 *
 *  Пример
 *  Ввод
 *  3 1
 *  15 17 22 35 60 85
 *  60 35 85 17 15 22
 *  85 17
 *
 *  Вывод
 *  60 22 17 85 15 35
*/
#include <iostream>
#include <string>
#include <fstream>
#include <vector>

using namespace std;

int main()
{
    ifstream input("input.txt");
    ofstream output("output.txt");

    if (!input)
    {
        cout << "input.txt not found\n";
        return 1;
    }

    short int N;
    input >> N;
    if (N < 1 || N > 1000)
    {
        cout << "Incorrect number of couples.\nPossible values: 1 <= N <= 1000.\n";
        return 1;
    }

    short int K;
    input >> K;
    if (K < 1 || K > 1000)
    {
        cout << "Incorrect number of pairs.\nPossible values: 1 <= N <= 1000.\n";
        return 1;
    }

    vector<int> ListA;
    vector<int> ListB;
    for (int i = 0; i < 2 * N; ++i)
    {
        int x;
        input >> x;
        ListA.push_back(x);
    }

    for (int i = 0; i < 2 * N; ++i)
    {
        int x;
        input >> x;
        ListB.push_back(x);
    }

    for (int i = 0; i < K; ++i)
    {
        int x;
        int y;
        input >> x;
        input >> y;

        int* tempBX = nullptr;
        int* tempBY = nullptr;
        int* tempX = nullptr;
        int* tempY = nullptr;

        for (int j = 0; j < 2 * N; ++j)
        {
            if (ListA[j] == x)
            {
                tempBX = &ListB[j];
            }

            if (ListA[j] == y)
            {
                tempBY = &ListB[j];
            }
        }

        for (int a = 0; a < 2 * N; ++a)
        {
            if (ListA[a] == *tempBX)
            {
                tempX = &ListB[a];
            }

            if (ListA[a] == *tempBY)
            {
                tempY = &ListB[a];
            }
        }
        swap(*tempBX, *tempBY);
        swap(*tempX, *tempY);
    }

    for (int i = 0; i < 2 * N; ++i) {
        output << ListB[i] << ' ';
    }

    return 0;
}